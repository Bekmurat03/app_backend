# orders/models.py

import uuid
from django.db import models
from django.conf import settings
from decimal import Decimal


class Order(models.Model):
    STATUS_CHOICES = [
        ('pending', '–í –æ–∂–∏–¥–∞–Ω–∏–∏'),
        ('accepted', '–ü—Ä–∏–Ω—è—Ç'),
        ('preparing', '–ì–æ—Ç–æ–≤–∏—Ç—Å—è'),
        ('ready_for_pickup', '–ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ'),
        ('on_the_way', '–í –ø—É—Ç–∏'),
        ('delivered', '–î–æ—Å—Ç–∞–≤–ª–µ–Ω'),
        ('cancelled', '–û—Ç–º–µ–Ω–µ–Ω'),
    ]

    code = models.CharField(max_length=20, unique=True, blank=True)
    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, related_name='orders')
    restaurant = models.ForeignKey('restaurants.Restaurant', on_delete=models.SET_NULL, null=True,
                                   related_name='orders')
    courier = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.SET_NULL, null=True, blank=True,
                                related_name='deliveries')
    address_text = models.TextField(verbose_name="–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ (—Ç–µ–∫—Å—Ç)", default="–ë–µ–∑ –∞–¥—Ä–µ—Å–∞")
    delivery_lat = models.DecimalField(max_digits=9, decimal_places=6, null=True, blank=True)
    delivery_lon = models.DecimalField(max_digits=9, decimal_places=6, null=True, blank=True)
    comment = models.TextField(blank=True, default='')

    # --- –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–ª—è ---
    items_total_price = models.DecimalField(max_digits=10, decimal_places=2, default=0, verbose_name="–°—É–º–º–∞ –ø–æ —Ç–æ–≤–∞—Ä–∞–º")
    delivery_fee = models.DecimalField(max_digits=10, decimal_places=2, default=0, verbose_name="–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏")
    service_fee = models.DecimalField(max_digits=10, decimal_places=2, default=0, verbose_name="–°–µ—Ä–≤–∏—Å–Ω—ã–π —Å–±–æ—Ä")
    total_price = models.DecimalField(max_digits=10, decimal_places=2, default=0,
                                      verbose_name="–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ")

    # --- –ü–æ–ª—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤ –≤—ã–ø–ª–∞—Ç ---
    platform_fee = models.DecimalField(max_digits=10, decimal_places=2, default=0, verbose_name="–ü—Ä–∏–±—ã–ª—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")
    restaurant_payout = models.DecimalField(max_digits=10, decimal_places=2, default=0,
                                            verbose_name="–í—ã–ø–ª–∞—Ç–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É")
    courier_payout = models.DecimalField(max_digits=10, decimal_places=2, default=0, verbose_name="–í—ã–ø–ª–∞—Ç–∞ –∫—É—Ä—å–µ—Ä—É")

    # --- –°—Ç–∞—Ç—É—Å –∏ –æ–ø–ª–∞—Ç–∞ ---
    status = models.CharField(max_length=20, choices=STATUS_CHOICES, default='pending')
    created_at = models.DateTimeField(auto_now_add=True)
    is_paid = models.BooleanField(default=False, verbose_name="–û–ø–ª–∞—á–µ–Ω")

    # üëá –ü–û–õ–Ø payment_method –∏ authorization_id –£–î–ê–õ–ï–ù–´

    # –ü–æ–ª–µ –¥–ª—è Robokassa. –í –Ω–µ–≥–æ –º—ã –∑–∞–ø–∏—Å—ã–≤–∞–µ–º ID –Ω–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å –ø–ª–∞—Ç–µ–∂.
    payment_invoice_id = models.IntegerField(null=True, blank=True, verbose_name="ID —Å—á–µ—Ç–∞ –≤ Robokassa")

    def save(self, *args, **kwargs):
        if not self.code:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏ –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–¥ –∑–∞–∫–∞–∑–∞
            self.code = f"JT-{str(uuid.uuid4().int)[:8]}"
        super().save(*args, **kwargs)

    def __str__(self):
        return f"–ó–∞–∫–∞–∑ {self.code}"

    class Meta:
        ordering = ['-created_at']
        verbose_name = "–ó–∞–∫–∞–∑"
        verbose_name_plural = "–ó–∞–∫–∞–∑—ã"


class OrderItem(models.Model):
    order = models.ForeignKey(Order, on_delete=models.CASCADE, related_name='items')
    menu = models.ForeignKey('menu.Dish', on_delete=models.SET_NULL, null=True)
    quantity = models.PositiveIntegerField(default=1)
    price_at_time_of_order = models.DecimalField(max_digits=10, decimal_places=2, verbose_name="–¶–µ–Ω–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –∑–∞–∫–∞–∑–∞")

    def __str__(self):
        return f"{self.quantity} x {self.menu.name if self.menu else '–£–¥–∞–ª–µ–Ω–Ω–æ–µ –±–ª—é–¥–æ'}"

    class Meta:
        verbose_name = "–ü–æ–∑–∏—Ü–∏—è –≤ –∑–∞–∫–∞–∑–µ"
        verbose_name_plural = "–ü–æ–∑–∏—Ü–∏–∏ –≤ –∑–∞–∫–∞–∑–µ"