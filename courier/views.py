# courier/views.py
from rest_framework import status
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.permissions import IsAuthenticated
from django.shortcuts import get_object_or_404
from orders.models import Order
from orders.serializers import OrderSerializer
from .models import CourierProfile
from .serializers import CourierProfileSerializer, OrderTrackingSerializer
from rest_framework import generics
from rest_framework.exceptions import NotFound
from .permissions import IsCourier
from django.db.models import Sum, Count
from django.utils import timezone

class DocumentUploadView(APIView):
    """
    –î–ª—è –∫—É—Ä—å–µ—Ä–∞: –∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.
    """
    permission_classes = [IsAuthenticated]

    def post(self, request, *args, **kwargs):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∫—É—Ä—å–µ—Ä
        if request.user.role != 'courier':
            return Response(
                {"error": "–¢–æ–ª—å–∫–æ –∫—É—Ä—å–µ—Ä—ã –º–æ–≥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã."},
                status=status.HTTP_403_FORBIDDEN
            )

        # –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        profile, created = CourierProfile.objects.get_or_create(user=request.user)

        # –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä
        serializer = CourierProfileSerializer(instance=profile, data=request.data)

        if serializer.is_valid():
            # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã, –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ "–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ" –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
            serializer.save(verification_status='on_review')
            return Response({"success": "–î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É."}, status=status.HTTP_200_OK)
        
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
class CurrentOrderView(generics.RetrieveAPIView):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ –∫—É—Ä—å–µ—Ä–∞ 
    (—Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω –≤–∑—è–ª –∏ –µ—â–µ –Ω–µ –¥–æ—Å—Ç–∞–≤–∏–ª).
    """
    serializer_class = OrderSerializer
    permission_classes = [IsAuthenticated]

    def get_object(self):
        # –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ (—Å—Ç–∞—Ç—É—Å '–≤ –ø—É—Ç–∏') –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞
        order = Order.objects.filter(courier=self.request.user, status='on_the_way').first()
        if not order:
            # –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–µ—Ç, –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É 404 –∏–ª–∏ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.
            # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –≤–µ—Ä–Ω–µ–º –æ—à–∏–±–∫—É, –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–º–æ–∂–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å.
            raise NotFound("–ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return order
class AvailableOrdersView(generics.ListAPIView):
    """
    –î–ª—è –∫—É—Ä—å–µ—Ä–∞: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã –∫ –≤—ã–¥–∞—á–µ
    –∏ –µ—â–µ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –Ω–∞ –¥—Ä—É–≥–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞.
    """
    serializer_class = OrderSerializer
    permission_classes = [IsAuthenticated]

    def get_queryset(self):
        return Order.objects.filter(status='ready_for_pickup', courier__isnull=True).order_by('-created_at')

class CourierAcceptOrderView(APIView):
    """
    –î–ª—è –∫—É—Ä—å–µ—Ä–∞: –ø–æ–∑–≤–æ–ª—è–µ—Ç "–≤–∑—è—Ç—å" –∑–∞–∫–∞–∑.
    """
    permission_classes = [IsAuthenticated]

    def post(self, request, order_id):
        if request.user.role != 'courier':
            return Response({"error": "–¢–æ–ª—å–∫–æ –∫—É—Ä—å–µ—Ä—ã –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã."}, status=status.HTTP_403_FORBIDDEN)
            
        order = get_object_or_404(Order, id=order_id)

        if order.status != 'ready_for_pickup' or order.courier is not None:
            return Response({"error": "–≠—Ç–æ—Ç –∑–∞–∫–∞–∑ —É–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."}, status=status.HTTP_400_BAD_REQUEST)
        
        order.courier = request.user
        order.status = 'on_the_way'
        order.save()
        
        # TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É—à –∫–ª–∏–µ–Ω—Ç—É, —á—Ç–æ –∫—É—Ä—å–µ—Ä –≤—ã–µ—Ö–∞–ª
        
        serializer = OrderSerializer(order)
        return Response(serializer.data, status=status.HTTP_200_OK)
class OrderPickedUpView(APIView):
    """ –ö—É—Ä—å–µ—Ä –æ—Ç–º–µ—á–∞–µ—Ç, —á—Ç–æ –∑–∞–±—Ä–∞–ª –∑–∞–∫–∞–∑ –∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞. """
    permission_classes = [IsAuthenticated]

    def post(self, request, order_id):
        order = get_object_or_404(Order, id=order_id, courier=request.user)
        # –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –≤ –ø—É—Ç–∏ (on_the_way)
        # –í —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏ —Ç—É—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ —É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
        if order.status == 'on_the_way':
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø. —Å—Ç–∞—Ç—É—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä, 'picked_up',
            # –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º 'on_the_way'.
            # TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å PUSH –∫–ª–∏–µ–Ω—Ç—É, —á—Ç–æ –∑–∞–∫–∞–∑ –µ–¥–µ—Ç.
            return Response({"success": "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω."}, status=status.HTTP_200_OK)
        return Response({"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞."}, status=status.HTTP_400_BAD_REQUEST)


class OrderDeliveredView(APIView):
    """ –ö—É—Ä—å–µ—Ä –æ—Ç–º–µ—á–∞–µ—Ç, —á—Ç–æ –¥–æ—Å—Ç–∞–≤–∏–ª –∑–∞–∫–∞–∑ –∫–ª–∏–µ–Ω—Ç—É. """
    permission_classes = [IsAuthenticated]

    def post(self, request, order_id):
        order = get_object_or_404(Order, id=order_id, courier=request.user)
        if order.status == 'on_the_way':
            order.status = 'delivered'
            order.save()
            # TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å PUSH –∫–ª–∏–µ–Ω—Ç—É –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É, —á—Ç–æ –∑–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω.
            return Response({"success": "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω."}, status=status.HTTP_200_OK)
        return Response({"error": "–ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞."}, status=status.HTTP_400_BAD_REQUEST)
class UpdateCourierLocationView(APIView):
    """
    –î–ª—è –∫—É—Ä—å–µ—Ä–∞: –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ–µ —Ç–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.
    """
    permission_classes = [IsAuthenticated]

    def post(self, request):
        user = request.user
        if user.role != 'courier':
            return Response({'error': '–¢–æ–ª—å–∫–æ –∫—É—Ä—å–µ—Ä—ã –º–æ–≥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å –ª–æ–∫–∞—Ü–∏—é'}, status=status.HTTP_403_FORBIDDEN)
        
        latitude = request.data.get('latitude')
        longitude = request.data.get('longitude')

        if latitude is not None and longitude is not None:
            user.latitude = latitude
            user.longitude = longitude
            user.save()
            return Response({'status': '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ'}, status=status.HTTP_200_OK)
        
        return Response({'error': '–ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã'}, status=status.HTTP_400_BAD_REQUEST)


class OrderTrackingView(APIView):
    """
    –î–ª—è –∫–ª–∏–µ–Ω—Ç–∞: –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞.
    """
    permission_classes = [IsAuthenticated]

    def get(self, request, order_id):
        try:
            # –ö–ª–∏–µ–Ω—Ç –º–æ–∂–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–π –∑–∞–∫–∞–∑
            order = Order.objects.get(id=order_id, user=request.user)
            serializer = OrderTrackingSerializer(order)
            return Response(serializer.data)
        except Order.DoesNotExist:
            return Response({'error': '–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω'}, status=status.HTTP_404_NOT_FOUND)
class ToggleOnlineStatusView(APIView):
    """
    –î–ª—è –∫—É—Ä—å–µ—Ä–∞: –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–Ω–ª–∞–π–Ω/–æ—Ñ—Ñ–ª–∞–π–Ω.
    """
    # üëá 2. –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤–æ–µ, –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ
    permission_classes = [IsAuthenticated, IsCourier]

    def post(self, request, *args, **kwargs):
        # 3. –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞, –µ–µ –¥–µ–ª–∞–µ—Ç IsCourier
        profile, created = CourierProfile.objects.get_or_create(user=request.user)
        
        profile.is_online = not profile.is_online
        profile.save(update_fields=['is_online'])
        
        return Response(
            {'status': 'success', 'is_online': profile.is_online},
            status=status.HTTP_200_OK
        )
class CourierOrderHistoryView(generics.ListAPIView):
    """
    –î–ª—è –∫—É—Ä—å–µ—Ä–∞: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –µ–≥–æ –∑–∞–∫–∞–∑–æ–≤.
    """
    serializer_class = OrderSerializer
    permission_classes = [IsAuthenticated]

    def get_queryset(self):
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∑–∞–∫–∞–∑—ã, –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞
        return Order.objects.filter(courier=self.request.user).order_by('-created_at')
class CourierStatsView(APIView):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞.
    """
    permission_classes = [IsAuthenticated, IsCourier]

    def get(self, request, *args, **kwargs):
        courier = request.user
        today = timezone.now().date()
        
        today_stats = Order.objects.filter(
            courier=courier, 
            status='delivered',
            created_at__date=today
        ).aggregate(
            earnings_today=Sum('delivery_fee'),
            orders_today=Count('id')
        )

        total_stats = Order.objects.filter(
            courier=courier, 
            status='delivered'
        ).aggregate(
            earnings_total=Sum('delivery_fee'),
            orders_total=Count('id')
        )

        data = {
            'earnings_today': today_stats.get('earnings_today') or 0,
            'orders_today': today_stats.get('orders_today') or 0,
            'earnings_total': total_stats.get('earnings_total') or 0,
            'orders_total': total_stats.get('orders_total') or 0,
        }
        
        return Response(data)
