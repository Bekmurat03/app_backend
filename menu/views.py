# menu/views.py (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)

from rest_framework import generics, viewsets, permissions
from django.db.models import Prefetch, Count
from django.shortcuts import get_object_or_404

from .models import Dish, MenuCategory
from .serializers import MenuCategorySerializer, DishSerializer, MenuCategoryWithDishesSerializer
from restaurants.models import Restaurant
from restaurants.serializers import RestaurantSerializer
from .permissions import IsDishOwner # üëà 1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–µ –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ


# --- VIEWS –î–õ–Ø –ö–õ–ò–ï–ù–¢–û–í (–ø—É–±–ª–∏—á–Ω—ã–µ) ---

class GlobalCategoryListView(generics.ListAPIView):
    """
    –û—Ç–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–µ—Å—Ç–æ—Ä–∞–Ω.
    """
    serializer_class = MenuCategorySerializer
    permission_classes = [permissions.AllowAny]

    def get_queryset(self):
        # 2. –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ê–Ω–Ω–æ—Ç–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º.
        # –≠—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ, —á–µ–º .distinct() –Ω–∞ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–∞—Ö –¥–∞–Ω–Ω—ã—Ö.
        return MenuCategory.objects.annotate(
            num_restaurants=Count('restaurants')
        ).filter(num_restaurants__gt=0)


class RestaurantsByCategoryView(generics.ListAPIView):
    """
    –û—Ç–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    """
    serializer_class = RestaurantSerializer
    permission_classes = [permissions.AllowAny]

    def get_queryset(self):
        category_id = self.kwargs.get('category_id')
        # 3. –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –°—Ä–∞–∑—É –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–∞—Ä–∏—Ñ—ã
        return Restaurant.objects.filter(
            categories__id=category_id, is_approved=True, is_active=True
        ).prefetch_related('categories', 'tariffs')


class MenuByRestaurantView(generics.ListAPIView):
    """
    –û—Ç–¥–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.
    """
    serializer_class = MenuCategoryWithDishesSerializer
    permission_classes = [permissions.AllowAny]

    def get_queryset(self):
        restaurant_id = self.kwargs.get('restaurant_id')
        restaurant = get_object_or_404(Restaurant, id=restaurant_id, is_approved=True)

        # 4. –ì–õ–ê–í–ù–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø:
        # –ú—ã –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –Ω–æ —Å—Ä–∞–∑—É –∂–µ "–ø–æ–¥–≥—Ä—É–∂–∞–µ–º" –≤ –Ω–∏—Ö —Ç–æ–ª—å–∫–æ —Ç–µ –±–ª—é–¥–∞,
        # –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –Ω—É–∂–Ω–æ–º—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É –∏ –¥–æ—Å—Ç—É–ø–Ω—ã.
        # –≠—Ç–æ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É N+1 –∑–∞–ø—Ä–æ—Å–æ–≤.
        return MenuCategory.objects.prefetch_related(
            Prefetch(
                'dishes',
                queryset=Dish.objects.filter(restaurant=restaurant, is_available=True)
            )
        ).filter(dishes__restaurant=restaurant).distinct()


# --- VIEWSET –î–õ–Ø –ú–ï–ù–ï–î–ñ–ï–†–ê –†–ï–°–¢–û–†–ê–ù–ê ---

class DishViewSet(viewsets.ModelViewSet):
    """
    API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞–º–∏ (CRUD) –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.
    """
    serializer_class = DishSerializer
    # 5. –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—à–µ –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –¥–æ—Å—Ç—É–ø–∞.
    # IsAuthenticated - –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, IsDishOwner - –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ (update, delete).
    permission_classes = [permissions.IsAuthenticated, IsDishOwner]

    def get_queryset(self):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç –±–ª—é–¥–∞ —Ç–æ–ª—å–∫–æ –∏–∑ —Å–≤–æ–∏—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
        if hasattr(self.request.user, 'restaurants'):
            return Dish.objects.filter(restaurant__in=self.request.user.restaurants.all())
        return Dish.objects.none()

    def perform_create(self, serializer):
        # –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–ª—é–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –µ–≥–æ –∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É –≤–ª–∞–¥–µ–ª—å—Ü–∞.
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏ —É –≤–ª–∞–¥–µ–ª—å—Ü–∞
        # –Ω—É–∂–Ω–æ –±—ã–ª–æ –±—ã –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å ID —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ.
        restaurant = self.request.user.restaurants.first()
        if restaurant:
            serializer.save(restaurant=restaurant)
        else:
            raise serializers.ValidationError("–£ –≤–∞—Å –Ω–µ—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞.")