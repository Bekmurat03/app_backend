# app_backend/apps/restaurants/views.py (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)

from rest_framework import generics, status
from rest_framework.views import APIView
from rest_framework.permissions import IsAuthenticated, IsAdminUser
from rest_framework.response import Response
from django.shortcuts import get_object_or_404

from .models import Restaurant
from .serializers import RestaurantSerializer, RestaurantWriteSerializer
from menu.serializers import MenuCategoryWithDishesSerializer

# üëá 1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–µ –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –¥–æ—Å—Ç—É–ø–∞
from .permissions import IsRestaurantOwner


class ApprovedRestaurantListView(generics.ListAPIView):
    """
    –û—Ç–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤.
    """
    serializer_class = RestaurantSerializer

    def get_queryset(self):
        # üëá 2. –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ò—Å–ø–æ–ª—å–∑—É–µ–º prefetch_related.
        # –≠—Ç–æ —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ. –¢–µ–ø–µ—Ä—å Django —Å–¥–µ–ª–∞–µ—Ç –≤—Å–µ–≥–æ 3 –∑–∞–ø—Ä–æ—Å–∞ –∫ –ë–î
        # (1 –¥–ª—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤, 1 –¥–ª—è –≤—Å–µ—Ö –∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π, 1 –¥–ª—è –≤—Å–µ—Ö –∏—Ö —Ç–∞—Ä–∏—Ñ–æ–≤)
        # –≤–º–µ—Å—Ç–æ N+1 –∑–∞–ø—Ä–æ—Å–æ–≤. –≠—Ç–æ —É—Å–∫–æ—Ä–∏—Ç –∑–∞–≥—Ä—É–∑–∫—É –≤ –¥–µ—Å—è—Ç–∫–∏ —Ä–∞–∑.
        return Restaurant.objects.filter(is_approved=True, is_active=True).prefetch_related(
            'categories', 'tariffs'
        )


class RestaurantDetailView(generics.RetrieveAPIView):
    """
    –û—Ç–¥–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ.
    """
    serializer_class = RestaurantSerializer
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∏ –∑–¥–µ—Å—å
    queryset = Restaurant.objects.filter(is_approved=True).prefetch_related('categories', 'tariffs')


class MyRestaurantView(generics.RetrieveUpdateAPIView):
    """
    –î–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞: –ø–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–≤–æ–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞.
    """
    # üëá 3. –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—à–µ –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ.
    # –¢–µ–ø–µ—Ä—å DRF –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –≤–ª–∞–¥–µ–ª–µ—Ü.
    permission_classes = [IsAuthenticated, IsRestaurantOwner]
    queryset = Restaurant.objects.prefetch_related('categories', 'tariffs').all()

    def get_object(self):
        # –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ–π, —Ç.–∫. –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∞–≤ –±–µ—Ä–µ—Ç –Ω–∞ —Å–µ–±—è DRF.
        # –ú—ã –∏—â–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å.
        obj = get_object_or_404(self.get_queryset(), owner=self.request.user)
        self.check_object_permissions(self.request, obj)
        return obj

    def get_serializer_class(self):
        if self.request.method == 'GET':
            return RestaurantSerializer
        return RestaurantWriteSerializer


class ToggleActiveView(APIView):
    """
    –î–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞: –≤–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤.
    """
    permission_classes = [IsAuthenticated, IsRestaurantOwner]

    def post(self, request, *args, **kwargs):
        restaurant = get_object_or_404(Restaurant, owner=request.user)
        # –ü—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∞–≤ —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—à–µ–º—É permission_classes
        self.check_object_permissions(request, restaurant)

        new_status = request.data.get('is_active')
        if new_status is None:
            return Response({"error": "–ü–æ–ª–µ is_active –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ."}, status=status.HTTP_400_BAD_REQUEST)

        if new_status is True and (not restaurant.address or not restaurant.latitude):
             return Response({"error": "–ß—Ç–æ–±—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ."}, status=status.HTTP_400_BAD_REQUEST)

        restaurant.is_active = new_status
        restaurant.save(update_fields=['is_active']) # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –ø–æ–ª–µ
        serializer = RestaurantSerializer(restaurant)
        return Response(serializer.data, status=status.HTTP_200_OK)


class RestaurantMenuView(generics.ListAPIView):
    """
    –î–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é –µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.
    """
    serializer_class = MenuCategoryWithDishesSerializer
    permission_classes = [IsAuthenticated, IsRestaurantOwner]

    def get_queryset(self):
        restaurant = get_object_or_404(Restaurant, owner=self.request.user)
        # –≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É
        self.check_object_permissions(self.request, restaurant)
        # –ó–∞–ø—Ä–æ—Å —É–∂–µ –±—ã–ª –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º, –æ—Å—Ç–∞–≤–ª—è–µ–º –µ–≥–æ
        return restaurant.categories.prefetch_related('dishes').all()

    def get_serializer_context(self):
        # –ü–µ—Ä–µ–¥–∞–µ–º ID —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –≤ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –±–ª—é–¥–∞
        context = super().get_serializer_context()
        restaurant = get_object_or_404(Restaurant, owner=self.request.user)
        context["restaurant_id"] = restaurant.id
        return context


# –í–ê–ñ–ù–û: RestaurantCreateView –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç–∞–∫ –∫–∞–∫ –∏–º –ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω.
class RestaurantCreateView(generics.CreateAPIView):
    queryset = Restaurant.objects.all()
    serializer_class = RestaurantWriteSerializer
    permission_classes = [IsAdminUser]

    def perform_create(self, serializer):
        serializer.save()