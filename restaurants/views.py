from rest_framework import generics, permissions
from rest_framework.generics import RetrieveAPIView, RetrieveUpdateAPIView, CreateAPIView
from .models import Restaurant
from .serializers import RestaurantSerializer, RestaurantWriteSerializer
from rest_framework.permissions import IsAuthenticated, IsAdminUser
from rest_framework.decorators import api_view, permission_classes
from rest_framework.permissions import IsAuthenticated
from rest_framework.response import Response
from django.shortcuts import get_object_or_404
from menu.models import Dish, MenuCategory
from menu.serializers import DishSerializer, MenuCategorySerializer, MenuCategoryWithDishesSerializer
from .models import Restaurant

# üë• –ü—É–±–ª–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ (–æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö)
class ApprovedRestaurantListView(generics.ListAPIView):
    queryset = Restaurant.objects.filter(is_approved=True)
    serializer_class = RestaurantSerializer


# üìÑ –î–µ—Ç–∞–ª–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ (–ø–æ ID) ‚Äî –ø—É–±–ª–∏—á–Ω–æ
class RestaurantDetailView(RetrieveAPIView):
    queryset = Restaurant.objects.filter(is_approved=True)
    serializer_class = RestaurantSerializer


# üîê –†–µ—Å—Ç–æ—Ä–∞–Ω –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –°–í–û–ô —Ä–µ—Å—Ç–æ—Ä–∞–Ω
class MyRestaurantView(RetrieveUpdateAPIView):
    serializer_class = RestaurantWriteSerializer
    permission_classes = [IsAuthenticated]

    def get_object(self):
        return Restaurant.objects.get(owner=self.request.user)


# üõ†Ô∏è –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω
class RestaurantCreateView(CreateAPIView):
    queryset = Restaurant.objects.all()
    serializer_class = RestaurantWriteSerializer
    permission_classes = [IsAdminUser]

    def perform_create(self, serializer):
        serializer.save()
@api_view(["GET"])
@permission_classes([IsAuthenticated])
def restaurant_menu_view(request):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.
    """
    # –ù–∞—Ö–æ–¥–∏–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    restaurant = get_object_or_404(Restaurant, owner=request.user)
    
    # –¢–µ–ø–µ—Ä—å –º—ã –ø–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ü–†–ê–í–ò–õ–¨–ù–û - –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –æ–±—ä–µ–∫—Ç–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
    # Django –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ—Ç –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç—Ç–∏–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º
    # —á–µ—Ä–µ–∑ –ø–æ–ª–µ ManyToManyField, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –¥–æ–±–∞–≤–∏–ª–∏ —Ä–∞–Ω–µ–µ.
    categories = restaurant.categories.prefetch_related('dishes').all()
    
    # –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä MenuCategorySerializer —Ç–µ–ø–µ—Ä—å —Å–º–æ–∂–µ—Ç –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    # –ø–æ–¥—Ç—è–Ω—É—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –±–ª—é–¥–∞, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ —Å–≤—è–∑–∞–Ω—ã —á–µ—Ä–µ–∑ related_name="dishes"
    serializer = MenuCategoryWithDishesSerializer(
        categories, 
        many=True, 
        context={'request': request, 'restaurant_id': restaurant.id}
    )
    
    return Response(serializer.data)

