from django.contrib.auth.models import AbstractUser
from django.db import models
from .managers import CustomUserManager  # üëà –∏–º–ø–æ—Ä—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
from django.db.models import Q

class User(AbstractUser):
    ROLE_CHOICES = [
        ('client', 'Client'),
        ('courier', 'Courier'),
        ('restaurant', 'Restaurant'),
        ('admin', 'Admin'),
    ]

    role = models.CharField(max_length=20, choices=ROLE_CHOICES, default='client')
    is_approved = models.BooleanField(default=False)
    phone = models.CharField(max_length=20, unique=True)

    username = models.CharField(max_length=150, unique=True, blank=True, null=True)

    # üëáüëáüëá –ù–ê–®–ò –ù–û–í–´–ï –ü–û–õ–Ø üëáüëáüëá
    is_push_enabled = models.BooleanField(default=True, verbose_name="Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã")
    promotions_enabled = models.BooleanField(default=True, verbose_name="–†–µ–∫–ª–∞–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    # üëÜüëÜüëÜ –ö–û–ù–ï–¶ –ù–û–í–´–• –ü–û–õ–ï–ô üëÜüëÜüëÜ
    latitude = models.FloatField(null=True, blank=True, verbose_name="–®–∏—Ä–æ—Ç–∞ –∫—É—Ä—å–µ—Ä–∞")
    longitude = models.FloatField(null=True, blank=True, verbose_name="–î–æ–ª–≥–æ—Ç–∞ –∫—É—Ä—å–µ—Ä–∞")
    
    USERNAME_FIELD = 'phone'       # üëà –ª–æ–≥–∏–Ω–∏–º—Å—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
    REQUIRED_FIELDS = []           # üëà –¥—Ä—É–≥–∏–µ –ø–æ–ª—è –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã

    objects = CustomUserManager()  # üëà –ø–æ–¥–∫–ª—é—á–∞–µ–º —Å–≤–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä

    def __str__(self):
        return f"{self.phone} ({self.role})"
class Address(models.Model):
    """
    –ú–æ–¥–µ–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='addresses', verbose_name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
    title = models.CharField(max_length=100, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ (–Ω–∞–ø—Ä. –î–æ–º, –†–∞–±–æ—Ç–∞)')
    full_address = models.CharField(max_length=255, verbose_name='–ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å')
    latitude = models.DecimalField(max_digits=9, decimal_places=6, verbose_name='–®–∏—Ä–æ—Ç–∞')
    longitude = models.DecimalField(max_digits=9, decimal_places=6, verbose_name='–î–æ–ª–≥–æ—Ç–∞')
    is_primary = models.BooleanField(default=False, verbose_name='–û—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å')

    class Meta:
        verbose_name = '–ê–¥—Ä–µ—Å'
        verbose_name_plural = '–ê–¥—Ä–µ—Å–∞'
        # –£ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å
        constraints = [
            models.UniqueConstraint(
                fields=['user'],
                condition=Q(is_primary=True),
                name='unique_primary_address_for_user'
            )
        ]

    def __str__(self):
        return f'{self.title}: {self.full_address}'