# app_backend/apps/core/views.py (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)

from rest_framework import generics, status, viewsets, permissions
from .models import Address, User
from .serializers import (
    AddressSerializer,
    ChangePasswordSerializer,
    PhoneTokenObtainPairSerializer,
    RegisterSerializer,
    UserSerializer
)
from rest_framework_simplejwt.views import TokenObtainPairView
from rest_framework.permissions import IsAuthenticated
from rest_framework.response import Response
from rest_framework.views import APIView


class RegisterView(generics.CreateAPIView):
    queryset = User.objects.all()
    serializer_class = RegisterSerializer
    # –†–∞–∑—Ä–µ—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤—Å–µ–º (–Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º)
    permission_classes = [permissions.AllowAny]


class PhoneLoginView(TokenObtainPairView):
    serializer_class = PhoneTokenObtainPairSerializer


class UserDetailView(generics.RetrieveUpdateAPIView):
    """
    –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    serializer_class = UserSerializer
    permission_classes = [IsAuthenticated]

    def get_object(self):
        # üëá –£–õ–£–ß–®–ï–ù–ò–ï 2: –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∏ –∑–¥–µ—Å—å.
        # –ú—ã –ø–æ–ª—É—á–∞–µ–º request.user, –Ω–æ —á—Ç–æ–±—ã —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –æ—Ç—Ä–∞–±–æ—Ç–∞–ª
        # –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –Ω–∞–º –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç —Å .select_related().
        user = User.objects.select_related('courier_profile').get(id=self.request.user.id)
        return user


class ChangePasswordView(generics.UpdateAPIView):
    serializer_class = ChangePasswordSerializer
    permission_classes = [IsAuthenticated]

    def get_object(self):
        return self.request.user

    def update(self, request, *args, **kwargs):
        serializer = self.get_serializer(data=request.data)
        serializer.is_valid(raise_exception=True)
        serializer.save()
        return Response({"detail": "–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω."}, status=status.HTTP_200_OK)


class AddressViewSet(viewsets.ModelViewSet):
    """
    API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞–º–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    serializer_class = AddressSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        # –ó–∞–ø—Ä–æ—Å —É–∂–µ –æ–ø—Ç–∏–º–∞–ª–µ–Ω, —Ç–∞–∫ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –∞–¥—Ä–µ—Å–∞–º–∏
        return Address.objects.filter(user=self.request.user).order_by('-is_primary', 'title')

    def perform_create(self, serializer):
        # –õ–æ–≥–∏–∫–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ - —ç—Ç–æ —Ö–æ—Ä–æ—à–∏–π UX.
        user = self.request.user
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –∫–∞–∫–∏–µ-–ª–∏–±–æ –∞–¥—Ä–µ—Å–∞.
        is_first_address = not Address.objects.filter(user=user).exists()
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –∞–¥—Ä–µ—Å, –¥–µ–ª–∞–µ–º –µ–≥–æ –æ—Å–Ω–æ–≤–Ω—ã–º (is_primary=True).
        serializer.save(user=user, is_primary=is_first_address)


class TogglePushNotificationView(APIView):
    """
    –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    """
    permission_classes = [IsAuthenticated]

    def post(self, request):
        user = request.user
        user.is_push_enabled = not user.is_push_enabled
        user.save(update_fields=['is_push_enabled'])
        return Response({
            "is_push_enabled": user.is_push_enabled
        }, status=status.HTTP_200_OK)