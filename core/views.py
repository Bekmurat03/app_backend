# app_backend/apps/core/views.py (–§–ò–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø)

from rest_framework import generics, status, viewsets, permissions
from .models import Address
# üëá 1. –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä—ã
from .serializers import (
    AddressSerializer, 
    ChangePasswordSerializer, 
    PhoneTokenObtainPairSerializer, 
    RegisterSerializer, 
    UserSerializer
)
from django.contrib.auth import get_user_model
from rest_framework_simplejwt.views import TokenObtainPairView
from rest_framework.permissions import IsAuthenticated
from rest_framework.response import Response
from rest_framework.views import APIView

User = get_user_model()


class RegisterView(generics.CreateAPIView):
    queryset = User.objects.all()
    serializer_class = RegisterSerializer


class PhoneLoginView(TokenObtainPairView):
    serializer_class = PhoneTokenObtainPairSerializer


class UserDetailView(generics.RetrieveUpdateAPIView):
    """
    –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–¥–∏–Ω—ã–π UserSerializer.
    """
    serializer_class = UserSerializer # üëà 2. –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω—ã–π, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä
    permission_classes = [IsAuthenticated]

    def get_object(self):
        return self.request.user


class ChangePasswordView(generics.UpdateAPIView):
    serializer_class = ChangePasswordSerializer
    permission_classes = [IsAuthenticated]

    def get_object(self):
        return self.request.user

    def update(self, request, *args, **kwargs):
        serializer = self.get_serializer(data=request.data)
        serializer.is_valid(raise_exception=True)
        serializer.save()
        return Response({"detail": "–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω."}, status=status.HTTP_200_OK)


class AddressViewSet(viewsets.ModelViewSet):
    """
    API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞–º–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    serializer_class = AddressSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return Address.objects.filter(user=self.request.user).order_by('-is_primary', 'title')

    def perform_create(self, serializer):
        is_first_address = not Address.objects.filter(user=self.request.user).exists()
        serializer.save(user=self.request.user, is_primary=is_first_address)

# --- üëá 3. –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –û–î–ù–£, –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ---
class TogglePushNotificationView(APIView):
    """
    –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    """
    permission_classes = [IsAuthenticated]

    def post(self, request):
        user = request.user
        # –ú—ã –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–µ
        user.is_push_enabled = not user.is_push_enabled
        user.save(update_fields=['is_push_enabled'])
        return Response({
            "is_push_enabled": user.is_push_enabled
        }, status=status.HTTP_200_OK)